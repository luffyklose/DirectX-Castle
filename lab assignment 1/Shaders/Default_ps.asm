//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbPass
// {
//
//   float4x4 gView;                    // Offset:    0 Size:    64 [unused]
//   float4x4 gInvView;                 // Offset:   64 Size:    64 [unused]
//   float4x4 gProj;                    // Offset:  128 Size:    64 [unused]
//   float4x4 gInvProj;                 // Offset:  192 Size:    64 [unused]
//   float4x4 gViewProj;                // Offset:  256 Size:    64 [unused]
//   float4x4 gInvViewProj;             // Offset:  320 Size:    64 [unused]
//   float3 gEyePosW;                   // Offset:  384 Size:    12
//   float cbPerObjectPad1;             // Offset:  396 Size:     4 [unused]
//   float2 gRenderTargetSize;          // Offset:  400 Size:     8 [unused]
//   float2 gInvRenderTargetSize;       // Offset:  408 Size:     8 [unused]
//   float gNearZ;                      // Offset:  416 Size:     4 [unused]
//   float gFarZ;                       // Offset:  420 Size:     4 [unused]
//   float gTotalTime;                  // Offset:  424 Size:     4 [unused]
//   float gDeltaTime;                  // Offset:  428 Size:     4 [unused]
//   float4 gAmbientLight;              // Offset:  432 Size:    16
//   
//   struct Light
//   {
//       
//       float3 Strength;               // Offset:  448
//       float FalloffStart;            // Offset:  460
//       float3 Direction;              // Offset:  464
//       float FalloffEnd;              // Offset:  476
//       float3 Position;               // Offset:  480
//       float SpotPower;               // Offset:  492
//
//   } gLights[16];                     // Offset:  448 Size:   768
//
// }
//
// cbuffer cbMaterial
// {
//
//   float4 gDiffuseAlbedo;             // Offset:    0 Size:    16
//   float3 gFresnelR0;                 // Offset:   16 Size:    12
//   float gRoughness;                  // Offset:   28 Size:     4
//   float4x4 gMatTransform;            // Offset:   32 Size:    64 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// gsamAnisotropicWrap               sampler      NA          NA             s4      1 
// gDiffuseMap                       texture  float4          2d             t0      1 
// cbPass                            cbuffer      NA          NA            cb1      1 
// cbMaterial                        cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[39], dynamicIndexed
dcl_constantbuffer CB2[2], immediateIndexed
dcl_sampler s4, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyz
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 9
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v3.xyxx, t0.xyzw, s4
mul r1.xyzw, r0.xyzw, cb2[0].xyzw
dp3 r0.w, v2.xyzx, v2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, v2.xyzx
add r3.xyz, -v1.xyzx, cb1[24].xyzx
dp3 r0.w, r3.xyzx, r3.xyzx
rsq r0.w, r0.w
add r4.xyzw, -cb2[1].wxyz, l(1.000000, 1.000000, 1.000000, 1.000000)
mul r2.w, r4.x, l(256.000000)
mad r3.w, r4.x, l(256.000000), l(8.000000)
mov r5.xyz, l(0,0,0,0)
mov r4.x, l(0)
loop 
  ige r5.w, r4.x, l(3)
  breakc_nz r5.w
  imul null, r5.w, r4.x, l(3)
  dp3 r6.x, -cb1[r5.w + 29].xyzx, r2.xyzx
  max r6.x, r6.x, l(0.000000)
  mul r6.xyz, r6.xxxx, cb1[r5.w + 28].xyzx
  mad r7.xyz, r3.xyzx, r0.wwww, -cb1[r5.w + 29].xyzx
  dp3 r6.w, r7.xyzx, r7.xyzx
  rsq r6.w, r6.w
  mul r7.xyz, r6.wwww, r7.xyzx
  dp3 r6.w, r7.xyzx, r2.xyzx
  max r6.w, r6.w, l(0.000000)
  log r6.w, r6.w
  mul r6.w, r2.w, r6.w
  exp r6.w, r6.w
  mul r6.w, r3.w, r6.w
  mul r6.w, r6.w, l(0.125000)
  dp3_sat r5.w, r7.xyzx, -cb1[r5.w + 29].xyzx
  add r5.w, -r5.w, l(1.000000)
  mul r7.x, r5.w, r5.w
  mul r7.x, r7.x, r7.x
  mul r5.w, r5.w, r7.x
  mad r7.xyz, r4.yzwy, r5.wwww, cb2[1].xyzx
  mul r8.xyz, r6.wwww, r7.xyzx
  mad r7.xyz, r7.xyzx, r6.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r7.xyz, r8.xyzx, r7.xyzx
  mad r7.xyz, r0.xyzx, cb2[0].xyzx, r7.xyzx
  mad r5.xyz, r7.xyzx, r6.xyzx, r5.xyzx
  iadd r4.x, r4.x, l(1)
endloop 
mad o0.xyz, cb1[27].xyzx, r1.xyzx, r5.xyzx
mov o0.w, r1.w
ret 
// Approximately 47 instruction slots used
